<?php 
/**
 * Vérifie si la database settée existe dans ensembl
 * @param str $db Nom de la database
 * */
function isDbExists($db)
{
	try
	{
		$connexion = new PDO('mysql:host=ensembldb.ensembl.org;dbname=' . $db . ';charset=utf8', 'anonymous', '', array(PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION));
	}
	catch (PDOException $e)
	{
		// Code erreur 1049: Unknown database
		if ($e->getCode() === 1049)
		{
			die("Erreur : " . $e->getCode() . " -> La base de données " . $db . " n'existe pas. <br /><a href=accueil.php>Retour à la page d'accueil</a>");
		}
		else
		{
			throw $e;
		}
	}
}
/**
 * Sette la database en SESSION. Si elle n'est pas spécifiée, redirige.
 * */
function dbSetting()
{
	if (isset($_POST['db']))
	{
		$sDb = htmlspecialchars($_POST['db']);
		isDbExists($sDb);
		$_SESSION['db'] = $_POST['db'];
	}
	else if (! isset($_SESSION['db']))
	{
		die("Erreur : La base de données n'a pas été spécifiée: <br /><a href=accueil.php>Retour à la page d'accueil</a>");
	}
}

/**
 * Retrouve les bases de donnée Ensembl où '_core_' apparait dans le nom.
 * @return $results L'object PDO contenant les résultats
 * */
function SearchAvailableDbLike_Core_()
{
	$connexion = new PDO('mysql:host=ensembldb.ensembl.org;charset=utf8', 'anonymous', '', array(PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION));
	$returned = $connexion->query("SHOW DATABASES LIKE '%core%'");
	return $returned;
}

/**
 * Crée un tableau associatif organisme => db_la_plus_récente
 * @return array $returned L'objet PDO contenant les résultats
 * */
function createDbArray()
{
	$db_like_core = SearchAvailableDbLike_Core_();
	$returned = array();
	while ($donnees = $db_like_core->fetch())
	{
		/* Récupération du nom de l'organisme avant '_core' en tant que
		 * clé avec le nom de la base de données la plus récente en objet.
		 * La dernière base parcourue pour un organisme écrase toutes les autres
		 * cad la plus récente.
		 * */
		$returned[preg_split('#_core#', $donnees['Database (%core%)'])[0]] = $donnees['Database (%core%)'];
	}
	$db_like_core->closeCursor();
	return $returned;
}

/**
 * Affiche la liste déroulante des db disponibles.
 * @param array $dbArray Tableau associatif des dbs disponibles.
 * */
function displayDbList($dbArray)
{
	?><select name="db"><?php
	foreach ($dbArray as $cle => $element)
	{
		if (isset($_SESSION['db']) AND $element == $_SESSION['db'])
		{
		?>
			<option selected=true value=<?php echo $element; ?>><?php echo $cle; ?></option>
		<?php
		}
		else
		{
		?>
			<option value=<?php echo $element; ?>><?php echo $cle; ?></option>
		<?php
		}
	}
	?></select><?php
}

/**
 * Crée un tableau associatif choix => texte.
 * @return array $returned Tableau associatif des choix possibles.
 * */
function createQueryArray()
{
	$returned = array(
	'choix1' => 'Nombre de nucléotides du gene ou transcrit:',
	'choix2' => 'x gènes possédant le plus de transcrits et leur description.',
	'choix3' => 'Tapez votre propre Requête');
	return $returned;
}

